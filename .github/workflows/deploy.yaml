name: Build and Deploy Blog
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm init -y
          npm install gray-matter@4.0.3 reading-time@1.5.0 marked@4.3.0 node-fetch@2.7.0

      - name: Create Build Directory
        run: |
          mkdir -p build
          cp index.html build/
          cp style.css build/
          cp main.js build/
          cp -r posts build/

      - name: Generate Content
        run: |
          cat << 'EOF' > scripts/generate-index.js
          const fs = require('fs');
          const matter = require('gray-matter');
          const readingTime = require('reading-time');
          const { marked } = require('marked');
          const path = require('path');
          const fetch = require('node-fetch');

          async function fetchAuthorInfo() {
            const username = process.env.GITHUB_REPOSITORY.split('/')[0];
            const response = await fetch(`https://api.github.com/users/${username}`);
            const data = await response.json();
            
            return {
              name: data.name || username,
              avatar: data.avatar_url,
              bio: data.bio,
              location: data.location,
              github: data.html_url,
              blog: data.blog,
              followers: data.followers
            };
          }

          async function generateFiles() {
            const BUILD_DIR = 'build';
            const POSTS_DIR = 'posts';

            // Generate posts.json
            const posts = [];
            const files = fs.readdirSync(POSTS_DIR);
            
            files.forEach(filename => {
              if (!filename.endsWith('.md')) return;
              
              const content = fs.readFileSync(path.join(POSTS_DIR, filename), 'utf-8');
              const { data, content: markdown } = matter(content);
              const readTime = readingTime(markdown);
              
              posts.push({
                title: data.title,
                date: data.date,
                tags: data.tags || [],
                path: `/posts/${filename}`,
                excerpt: data.excerpt || markdown.slice(0, 200) + '...',
                readingTime: readTime.text,
                content: marked.parse(markdown)
              });
            });

            // Sort posts by date
            posts.sort((a, b) => new Date(b.date) - new Date(a.date));

            // Get author info
            const author = await fetchAuthorInfo();

            // Write files
            fs.writeFileSync(path.join(BUILD_DIR, 'posts.json'), JSON.stringify(posts, null, 2));
            fs.writeFileSync(path.join(BUILD_DIR, 'author.json'), JSON.stringify(author, null, 2));
          }

          generateFiles().catch(console.error);
          EOF

          mkdir -p scripts
          node scripts/generate-index.js

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build
          clean: true